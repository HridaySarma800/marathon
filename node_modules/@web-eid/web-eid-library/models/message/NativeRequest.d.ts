export interface NativeAuthenticateRequest {
    command: "authenticate";
    arguments: {
        /**
         * A base64-encoded cryptographic nonce, generated by the server, with at least 256 bits of entropy
         */
        challengeNonce: string;
        /**
         * The origin of the website which initiated the authentication
         *
         * The origin comes from the postMessage API's sender object.
         */
        origin: string;
        /**
         * A two-letter ISO 639-1 language code.
         *
         * If translations exist for the given language, then the user interface will be displayed in this language.
         */
        lang?: string;
    };
}
export interface NativeGetSigningCertificateRequest {
    command: "get-signing-certificate";
    arguments: {
        /**
         * The origin of the website which initiated the authentication
         *
         * The origin comes from the postMessage API's sender object.
         */
        origin: string;
        /**
         * A two-letter ISO 639-1 language code.
         *
         * If translations exist for the given language, then the user interface will be displayed in this language.
         */
        lang?: string;
    };
}
export interface NativeSignRequest {
    command: "sign";
    arguments: {
        /**
         * The Base64-encoded DER-encoded signing certificate of the eID user
         */
        certificate: string;
        /**
         * The Base64-encoded document hash
         */
        hash: string;
        /**
         * The hash function
         *
         * Allowed hash function values are SHA-224, SHA-256, SHA-384, SHA-512, SHA3-224, SHA3-256, SHA3-384, SHA3-512,
         * and the hash function has to be supported by the card (see the hashFunction member of supportedSignatureAlgorithms array elements
         * in the get-signing-certificate command output).
         *
         * The document hash length has to match the hash function output length
         * and the hash function has to be supported by the electronic ID signing implementation.
         */
        hashFunction: string;
        /**
         * The origin of the website which initiated the authentication
         *
         * The origin comes from the postMessage API's sender object.
         */
        origin: string;
        /**
         * A two-letter ISO 639-1 language code.
         *
         * If translations exist for the given language, then the user interface will be displayed in this language.
         */
        lang?: string;
    };
}
export interface NativeQuitRequest {
    command: "quit";
    arguments: Record<string, never>;
}
export declare type NativeRequest = NativeAuthenticateRequest | NativeGetSigningCertificateRequest | NativeSignRequest | NativeQuitRequest;
//# sourceMappingURL=NativeRequest.d.ts.map